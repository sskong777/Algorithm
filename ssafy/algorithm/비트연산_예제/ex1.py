#1. 10진수 -> 2진수 변환
"""
7번 비트 검사
6번 비트 검사
...
0번 비트 검사

ex. i의 j번 비트가 1인지 여부를 검사
0
| b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0 |
  0    0    0    0    0    0    0    0 -> i의
  1    0    0    0    0    0    0    0 -> j번째 비트(7번째)
  0    1    0    0    0    0    0    0 -> j번째 비트(6번째)
  ....
  0    0    0    0    0    0    1    0 -> j번째 비트(1번째)

  0    0    0    0    0    0    0    1 -> j번째 비트(0번째)
  0    0    0    0    0    0    0    0

1
| b7 | b6 | b5 | b4 | b3 | b2 | b1 | b0 |
  0    0    0    0    0    0    0    1 -> i의
  1    0    0    0    0    0    0    0 -> j번째 비트(7번째)
  0    1    0    0    0    0    0    0 -> j번째 비트(6번째)
  ....
  0    0    0    0    0    0    1    0 -> j번째 비트(1번째)

  0    0    0    0    0    0    0    1 -> j번째 비트(0번째)
  0    0    0    0    0    0    0    1


음수 연산 (2의 보수)
5
- 00000101

-5
Step 1.
 - 양수 일 때의 비트를 모두 반전 시킨다.
 - 11111010

Step 2.
 - 반전 시킨 비트에 1을 더한다.
 - 11111011
"""
def Bbit_print(i):
    output = ""

    for j in range(7, -1, -1):
        output += '1' if i & (1 << j) else '0'
    print (output)

for i in range(-5, 6):
    print (f'{i: 2}  ', end='')
    Bbit_print(i)

    # print(f'{i: 2}  {i:08b}')